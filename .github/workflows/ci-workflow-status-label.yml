# SPDX-License-Identifier: MIT

name: Record Workflow Status
run-name: ${{ github.workflow }} ${{ github.event_name }} on ${{ github.ref_name && github.ref_name || github.ref }}

# This workflow is an example of running a workflow on a GitHub Hosted
# runner. It performs the nominal process of running a build process
# with only syntax checking. The workflow utilizes shared workflow
# actions from the common library.

# Secrets
# secrets.ACTIONS_STEP_DEBUG                Repository

# Self hosted runners have the prerequsite dependency to install the
# host tools dependencies before workflow use.

on:
  workflow_run:
    workflows:
    - Cloud Build
    - Cloud Fetch
    - Cloud Parse
    types:
      - completed

# Workflow permissions for current repository; use the principal of
# assigning the least necessary permissions required.

permissions:
  actions: write
  contents: read
  issues: write
  pull-requests: write

########################################################################

# Workflow environment initial state. The environment is utilized to
# setup values used by job steps.

# env:
#   _PLACE_HOLDER_KEY: _PLACE_HOLDER_VALUE

########################################################################

jobs:

  Run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

    # GitHub actions github-script
    # https://github.com/actions/github-script

    - name: Context dump for diagnostics
      if: true
      uses: actions/github-script@v7
      with:
        script: |
          console.log("github-script accessible")
          console.log(`"github":\n${JSON.stringify(github, null, 2)}`);
          console.log(`"context":\n${JSON.stringify(context, null, 2)}`);

    - name: Checkout repository
      if: github.event.workflow_run
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get workflow run conclusion
      if: github.event.workflow_run
      uses: actions/github-script@v7
      id: workflow_conclusion
      with:
        script: |
          const conclusion = context.payload.workflow_run.conclusion;
          return { CONCLUSION: conclusion };

    - name: Check workflow run conclusion
      if: github.event.workflow_run
      uses: actions/github-script@v7
      id: check_conclusion
      with:
        script: |
          const conclusion = context.payload.workflow_run.conclusion;
          let success = 'false';
          if (conclusion === 'success') {
            success = 'true';
          }
          return { SUCCESS: success };

    - name: Create issue on failure
      if: steps.check_conclusion.outputs.result.SUCCESS == 'false'
      id: create_issue
      uses: actions/github-script@v7
      with:
        script: |
          const conclusion = '${{ steps.check_conclusion.outputs.result.CONCLUSION }}';
          const workflowName = '${{ github.event.workflow_run.name }}';
          const workflowRunUrl = '${{ github.event.workflow_run.html_url }}';

          const { data: issue } = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Workflow "${workflowName}" Failed: ${conclusion}`,
            body: `The workflow "${workflowName}" completed with conclusion "${conclusion}".\n\nSee run details: ${workflowRunUrl}`,
          });
          // core.setOutput('ISSUE_NUMBER', issue.number);
          return { issue_number: issue.number };

    - name: Add label to issue
      if: steps.create_issue.outputs.result.issue_number
      uses: actions/github-script@v7
      with:
        script: |
          const conclusion = context.payload.workflow_run.conclusion;
          const issueNumber = '${{ steps.create_issue.outputs.result.issue_number }}';

          let labelName = '';
          if (conclusion === 'success') {
            labelName = 'workflow-success';
          } else if (conclusion === 'failure') {
            labelName = 'workflow-failure';
          } else if (conclusion === 'cancelled') {
            labelName = 'workflow-cancelled';
          } else {
            labelName = `workflow-${conclusion}`;
          }
          if (labelName) {
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: [labelName],
              });
              console.log(`Added label "${labelName}" to issue ${issueNumber}`);
            } catch (error) {
              console.error(`Failed to add label "${labelName}" to issue ${issueNumber}:`, error);
            }
          }

    - name: Create pull-request on success
      if: steps.check_conclusion.outputs.result.SUCCESS == 'true'
      id: create_pr
      uses: actions/github-script@v7
      with:
        script: |
          const workflowName = '${{ github.event.workflow_run.name }}';
          const workflowRunUrl = '${{ github.event.workflow_run.html_url }}';
          const commitSha = '${{ github.event.workflow_run.head_commit.id }}';

          try {
            const { data: pullRequests } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commitSha,
            });
            if (pullRequests && pullRequests.length > 0) {
              console.log(`Pull requests associated with commit ${commitSha} already exist. Skipping PR creation.`);
              return { pr_number: pullRequests[0].number };
            }
            const branchName = `workflow-success-${commitSha.substring(0, 7)}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branchName}`,
              sha: commitSha,
            });
            const {data: pr} = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Workflow "${workflowName}" Success: ${commitSha.substring(0, 7)}`,
              head: branchName,
              base: 'main',
              body: `This pull request was automatically created because the workflow "${workflowName}" completed successfully.\n\nSee run details: ${workflowRunUrl}`,
            });
            return { pr_number: pr.number };
          } catch (error) {
            console.error("Error creating pull request:", error);
            return {};
          }

    - name: Add label to pull request
      if: steps.create_pr.outputs.result.pr_number
      uses: actions/github-script@v7
      with:
        script: |
          const conclusion = context.payload.workflow_run.conclusion;
          const prNumber = '${{ steps.create_pr.outputs.result.pr_number }}';

          let labelName = '';
          if (conclusion === 'success') {
            labelName = 'workflow-success';
          } else if (conclusion === 'failure') {
            labelName = 'workflow-failure';
          } else if (conclusion === 'cancelled') {
            labelName = 'workflow-cancelled';
          } else {
            labelName = `workflow-${conclusion}`;
          }
          if (labelName) {
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: [labelName],
              });
              console.log(`Added label "${labelName}" to pull request ${prNumber}`);
            } catch (error) {
              console.error(`Failed to add label "${labelName}" to pull request ${prNumber}:`, error);
            }
          }
